# Variables - Sampling
n_samples   = config["subsamplings"]["n_samples"],
sample_size = config["subsamplings"]["sample_size"],
sample_idx  = list([str(x+1) for x in range(int(n_samples[0]))])
SEED    = config["random"]["seed"] 

rule subsampling_subsample_integers_sample:
    output:
        expand(
            sampled + "{{tissue}}_{sampling}.idx",
            sampling = sample_idx
        )
    threads:
        1
    params:
        prefix = sampled + "{tissue}",
        set_size = lambda wildcards: config["samples_pe"][wildcards.tissue]["reads"],
        n_samples   = n_samples,
        sample_size = sample_size,
        seed = SEED,
    log:
        "logs/subsampling/subsample_integers_{tissue}.log"
    benchmark:
        "benchmarks/subsampling/subsample_integers_{tissue}.json"
    shell:
        """
        python3 scripts/subsample_integers.py \
            {params.prefix} \
            {params.set_size} \
            {params.n_samples} \
            {params.sample_size} \
            {params.seed} \
        2> {log}
        """



rule subsampling_filter_fastq_by_record_number_sample:
    input:
        forward = raw + "{tissue}_1.fq.gz",
        reverse = raw + "{tissue}_2.fq.gz",
        index   = sampled + "{tissue}_{sampling}.idx"
    output:
        forward = sampled + "{tissue}_{sampling}_1.fq.gz",
        reverse = sampled + "{tissue}_{sampling}_2.fq.gz"
    threads:
        2
    log:
        "logs/subsampling/filter_fastq_by_record_number_{tissue}.log"
    benchmark:
        "benchmarks/subsampling/filter_fastq_by_record_number_{tissue}.json"
    shell:
        """
        ( {gzip} -dc {input.forward} |
        python3 scripts/filter_fastq_by_record_number.py \
            {input.index} |
        {gzip} -9 > {output.forward} ) 2> {log}
        
        ( {gzip} -dc {input.reverse} |
        python3 scripts/filter_fastq_by_record_number.py \
            {input.index} |
        {gzip} -9 > {output.reverse} ) 2>> {log}
        """

